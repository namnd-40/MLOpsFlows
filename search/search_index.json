{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"mlopsflows/utils/","text":"docs/mlopsflows/utils.md The utility module load_dict ( filepath ) Load a dictionary from a JSON's filepath. Parameters: Name Type Description Default filepath str location of file. required Returns: Name Type Description Dict Dict loaded JSON data. Source code in mlopsflows/utils.py 13 14 15 16 17 18 19 20 21 22 def load_dict ( filepath : str ) -> Dict : \"\"\"Load a dictionary from a JSON's filepath. Args: filepath (str): location of file. Returns: Dict: loaded JSON data. \"\"\" with open ( filepath , encoding = \"UTF-8\" ) as file_path : data = json . load ( file_path ) return data save_dict ( dictionary , filepath , cls = None , sortkeys = False ) Save a dictionary to a specific location. Parameters: Name Type Description Default dictionary Dict data to save. required filepath str location of where to save the data. required cls optional encoder to use on dict data. Defaults to None. None sortkeys bool whether to sort keys alphabetically. Defaults to False. False Source code in mlopsflows/utils.py 25 26 27 28 29 30 31 32 33 34 35 def save_dict ( dictionary : Dict , filepath : str , cls = None , sortkeys : bool = False ) -> None : \"\"\"Save a dictionary to a specific location. Args: dictionary (Dict): data to save. filepath (str): location of where to save the data. cls (optional): encoder to use on dict data. Defaults to None. sortkeys (bool, optional): whether to sort keys alphabetically. Defaults to False. \"\"\" with open ( filepath , \"w\" , encoding = \"UTF-8\" ) as file_path : json . dump ( dictionary , indent = 2 , fp = file_path , cls = cls , sort_keys = sortkeys ) file_path . write ( \" \\n \" ) set_seeds ( seed = 42 ) Set seed for reproducibility. Parameters: Name Type Description Default seed int number to be used as the seed. Defaults to 42. 42 Source code in mlopsflows/utils.py 38 39 40 41 42 43 44 45 def set_seeds ( seed : int = 42 ) -> None : \"\"\"Set seed for reproducibility. Args: seed (int, optional): number to be used as the seed. Defaults to 42. \"\"\" # Set seeds np . random . seed ( seed ) random . seed ( seed )","title":"utils"},{"location":"mlopsflows/utils/#docsmlopsflowsutilsmd","text":"The utility module","title":"docs/mlopsflows/utils.md"},{"location":"mlopsflows/utils/#mlopsflows.utils.load_dict","text":"Load a dictionary from a JSON's filepath. Parameters: Name Type Description Default filepath str location of file. required Returns: Name Type Description Dict Dict loaded JSON data. Source code in mlopsflows/utils.py 13 14 15 16 17 18 19 20 21 22 def load_dict ( filepath : str ) -> Dict : \"\"\"Load a dictionary from a JSON's filepath. Args: filepath (str): location of file. Returns: Dict: loaded JSON data. \"\"\" with open ( filepath , encoding = \"UTF-8\" ) as file_path : data = json . load ( file_path ) return data","title":"load_dict()"},{"location":"mlopsflows/utils/#mlopsflows.utils.save_dict","text":"Save a dictionary to a specific location. Parameters: Name Type Description Default dictionary Dict data to save. required filepath str location of where to save the data. required cls optional encoder to use on dict data. Defaults to None. None sortkeys bool whether to sort keys alphabetically. Defaults to False. False Source code in mlopsflows/utils.py 25 26 27 28 29 30 31 32 33 34 35 def save_dict ( dictionary : Dict , filepath : str , cls = None , sortkeys : bool = False ) -> None : \"\"\"Save a dictionary to a specific location. Args: dictionary (Dict): data to save. filepath (str): location of where to save the data. cls (optional): encoder to use on dict data. Defaults to None. sortkeys (bool, optional): whether to sort keys alphabetically. Defaults to False. \"\"\" with open ( filepath , \"w\" , encoding = \"UTF-8\" ) as file_path : json . dump ( dictionary , indent = 2 , fp = file_path , cls = cls , sort_keys = sortkeys ) file_path . write ( \" \\n \" )","title":"save_dict()"},{"location":"mlopsflows/utils/#mlopsflows.utils.set_seeds","text":"Set seed for reproducibility. Parameters: Name Type Description Default seed int number to be used as the seed. Defaults to 42. 42 Source code in mlopsflows/utils.py 38 39 40 41 42 43 44 45 def set_seeds ( seed : int = 42 ) -> None : \"\"\"Set seed for reproducibility. Args: seed (int, optional): number to be used as the seed. Defaults to 42. \"\"\" # Set seeds np . random . seed ( seed ) random . seed ( seed )","title":"set_seeds()"}]}